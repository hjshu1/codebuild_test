def get_commit_msg(){
    script {
        return sh(script : "git show -s --format=%B ${env.GIT_COMMIT}", returnStdout: true).trim().replace (' ', '-spc-')
    }
}

def get_commit_author(){
    script {
        return sh(script : "git --no-pager show -s --format=%an ${env.GIT_COMMIT}", returnStdout: true).trim()
    }
}

pipeline {
    agent any
    stages {
        stage('test ssh') {
            steps {        
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${TARGET_HOST} "pwd"
                """
                }
            }
        }

        stage('multiline ssh') {
            steps {        
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${TARGET_HOST} '
                    /bin/sh /root/HOME/run_front.sh
                    '
                """
                }
            }
        }
    }
    post {
        success {
            // slackSend (channel: '#migrator', color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            slackSend ( color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
        }
        failure {
            slackSend ( color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
            // slackSend (channel: '#migrator', color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
    environment {
        TARGET_HOST = "root@192.168.20.1"
        COMMIT_MSG = get_commit_msg()
        COMMIT_AUTHOR = get_commit_author() 
    }
}
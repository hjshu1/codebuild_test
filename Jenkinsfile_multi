def get_commit_msg(){
    script {
        return sh(script : "git show -s --format=%B ${env.GIT_COMMIT}", returnStdout: true).trim().replace (' ', '-spc-')
    }
}

def get_commit_author(){
    script {
        return sh(script : "git --no-pager show -s --format=%an ${env.GIT_COMMIT}", returnStdout: true).trim()
    }
}


pipeline {
    agent any
    environment {
        GREEN = '#00FF00'
        RED = '#FF0000'
        COMMIT_MSG = get_commit_msg()
        COMMIT_AUTHOR = get_commit_author()
    }
    stages {
        stage('Start Build') {
            steps {
                slackSend ( color: "${env.GREEN}", message: "[START]\nTime: ${env.BUILD_TIMESTAMP}\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}")
                slackSend ( color: "${env.GREEN}", message: "workspace: ${env.WORKSPACE}}\n CHANGE_TARGET: ${env.CHANGE_TARGET}")
            }
        }

        stage('Build Develop') {
            when {
                branch 'develop'
            }
            steps {        
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${SSH_DEV} '
                    /bin/sh /root/HOME/run_front.sh
                    '
                """
                }
            }
        }
        
        stage('Build main') {           
            when {
                branch 'main'
            }
        
            steps {
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """

                    ssh -o StrictHostKeyChecking=no ${SSH_DEV} '
                    cd /root/HOME/childfunds/greenbell-front
                    docker stop greenbell-front-test
                    docker rm greenbell-front-test
                    docker build --build-arg BUILD=build-only:dev -t greenbell-front-image-test -f ./ci/Dockerfile .
                    docker run -d --name greenbell-front-test -p 9020:9020 \
                      -e STAGE=dev \
                      --network server_net \
                      --ip 192.168.20.90 \
                      greenbell-front-image-test
                    '
                """
                }
            }
            
        }
    }

    post {
        success {
            // slackSend (channel: '#migrator', color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            // slackSend ( color: "${env.GREEN}", message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
            slackSend ( color: "${env.GREEN}", message: "[SUCCESS]\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}\nConsole Log: ${env.BUILD_URL}consoleText")
        }
        failure {
            // slackSend ( color: "${env.RED}", message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
            // slackSend (channel: '#migrator', color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            slackSend ( color: "${env.RED}", message: "[FAILURE]\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}\nConsole Log: ${env.BUILD_URL}consoleText")
        }
    }
}
def get_commit_msg(){
    script {
        return sh(script : "git show -s --format=%B ${env.GIT_COMMIT}", returnStdout: true).trim()
    }
}

def get_commit_author(){
    script {
        return sh(script : "git --no-pager show -s --format=%an ${env.GIT_COMMIT}", returnStdout: true).trim()
    }
}

pipeline {
    agent any
    environment {
        GREEN = '#00FF00'
        RED = '#FF0000'
        COMMIT_MSG = get_commit_msg()
        COMMIT_AUTHOR = get_commit_author()
        PROJECT_NAME = 'greenbell-api'
        PROJECT_IMAGE = 'greenbell-api-image'
        PROJECT_HOME = '/home/web/childfunds'
        DOCKER_FILE = './ci/Dockerfile'
        DOCKER_DEV_OPT = '-p 3020:3020 -e STAGE=dev --network server_net --ip 192.168.20.30'
        DOCKER_PROD_OPT = '-p 3020:3020 -e STAGE=dev --network server_net --ip 192.168.20.30'
    }
    stages {
        stage('Start Build') {
            steps {
                script {
                    def THEJOB = "${JOB_NAME.substring(JOB_NAME.lastIndexOf('/') + 1, JOB_NAME.length())}"
                    def PROJECT = "${JOB_NAME.substring(0, JOB_NAME.lastIndexOf('/'))}"
                
                    slackSend ( color: "${env.GREEN}", message: "[START]\nTime: ${env.BUILD_TIMESTAMP}\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}")
                    slackSend ( color: "${env.GREEN}", message: "workspace: ${env.WORKSPACE}}\n CHANGE_TARGET: ${PROJECT}\nBRANCH: ${env.BRANCH_NAME}")
                }
            }
        }

        stage('Build Develop') {
            when {
                branch 'develop'
            }
            steps {        
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${SSH_DEV} '
                    /bin/sh /root/HOME/run_front.sh
                    '
                """
                }
            }
        }
        
        //  stage('Build Main') {
        //     when {
        //         branch 'main'
        //     }
        //     steps {        
        //         sshagent (credentials: ['jenkins_ssh_pri']) {
        //         sh """
        //             ssh -o StrictHostKeyChecking=no ${SSH_DEV} '
        //             cd ${env.PROJECT_HOME}/${env.PROJECT_NAME}
        //             git pull
        //             docker stop ${env.PROJECT_NAME}
        //             docker rm ${env.PROJECT_NAME}
        //             docker build -t ${env.PROJECT_IMAGE} -f ${env.DOCKER_FILE} .
        //             '
        //         """
        //         }
        //     }
        // }

        stage('Run Main Docker') {
            when {
                branch 'main'
            }
            steps {        
                sshagent (credentials: ['jenkins_ssh_pri']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${SSH_DEV} '
                    echo asdf
                    '
                """
                }
            }
            
        }
    }
    post {
        success {
            script {
                def THEJOB = "${JOB_NAME.substring(JOB_NAME.lastIndexOf('/') + 1, JOB_NAME.length())}"
                if (THEJOB == 'develop') {
                    slackSend ( color: "${env.GREEN}", message: "[SUCCESS]\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}\nConsole Log: ${env.BUILD_URL}consoleText")
                }
            }
            // slackSend (channel: '#migrator', color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            // slackSend ( color: "${env.GREEN}", message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
            
        }
        failure {
            // slackSend ( color: "${env.RED}", message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}consoleText) (${env.COMMIT_MSG}) (${env.COMMIT_AUTHOR})")
            // slackSend (channel: '#migrator', color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            slackSend ( color: "${env.RED}", message: "[FAILURE]\nProject: ${env.JOB_NAME}\nCommit User: ${env.COMMIT_AUTHOR}\nCommit Msg: ${env.COMMIT_MSG}\nConsole Log: ${env.BUILD_URL}consoleText")
        }
    }

}